image: mcr.microsoft.com/devcontainers/dotnet:6.0

definitions:
  services:
    mysql:
      image: mysql:latest
      environment:
        MYSQL_ROOT_PASSWORD: root_password
        MYSQL_DATABASE: mydatabase
        MYSQL_USER: myuser
        MYSQL_PASSWORD: mypassword
      ports:
        - 3306:3306

  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache

  code-build: &code-build
    script:
      - dotnet restore
      - dotnet publish --no-restore --no-self-contained --configuration Release --output ../publish
    artifacts:
      - publish/**

  application-publish: &application-publish
    services:
      - docker
    script:
      - echo "export IMAGE_NAME=mobydigital/$BITBUCKET_PROJECT_SLUG" >> docker-version.txt
      - echo "export IMAGE_TAG=$BITBUCKET_BUILD_NUMBER" >> docker-version.txt
      - cat docker-version.txt
      - source docker-version.txt
      - docker build -t $IMAGE_NAME:$IMAGE_TAG .
      - docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD
      - docker push $IMAGE_NAME:$IMAGE_TAG
    artifacts:
      - docker-version.txt

  deployk8s: &deployk8s
    image: mobydigital/backup-image
    clone: 
      enabled: false
    script:
      - source docker-version.txt
      - export NAMESPACE=academy-dotnet-${echo -n $BITBUCKET_DEPLOYMENT_ENVIRONMENT | sed -e "s/testing/dev/g; s/staging/uat/g"; s/production/prod/g";}
      - curl -sL https://github.com/digitalocean/doctl/releases/download/v1.96.1/doctl-1.96.1-linux-amd64.tar.gz | tar -xzv
      - ./doctl -t $DOCTL_TOKEN k8s cluster kubeconfig show talento-k8s > kubeconfig.yml
      - kubectl --insecure-skip-tls-verify --kubeconfig=kubeconfig.yml set image deployment/$BITBUCKET_ backend=$IMAGE_NAME:$IMAGE_TAG -n $NAMESPACE --record=true

pipelines:
  branches:
    ## Pipeline for NO-PRD DEPLOY
    develop:
      - step:
          name: "Configuracion de Base de Datos MySQL"
          services:
            - mysql
          script:
            - apt-get update && apt-get install -y mysql-client
            - mysql -h mysql -u root -proot_password -e "CREATE TABLE IF NOT EXISTS mytable (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255));"
            - mysql -h mysql -u root -proot_password -e "INSERT INTO mytable (name) VALUES ('Example Data 1'), ('Example Data 2');"

      #- step:
      #    name: "Code Review SONARQUBE"
      #    # <<: *code-review

      - step:
          name: "TODO TESTING"
          script:
            - echo "Testeo unitario y funcional"

      - step:
          name: "Code Building"
          <<: *code-build

      - step:
          name: "Application Publish"
          <<: *application-publish

      - step:
          name: "Application DEV deployment"
          deployment: testing
          <<: *deployk8s

      - step:
          name: "TODO DATS TESTING"
          script:
            - echo "This script runs only on commit to branches with names that match the feature/* pattern."

    ## Pipeline for PRD DEPLOY
    master:
      - step:
          name: "Application QAT/UAT deployment"
          deployment: staging
          <<: *deployk8s

      - step:
          name: "TODO DATS TESTING"
          script:
            - echo "This script runs only on commit to branches with names that match the feature/* pattern."
